// Code generated by protoc-gen-go.
// source: contracts.proto
// DO NOT EDIT!

/*
Package deployment is a generated protocol buffer package.

It is generated from these files:
	contracts.proto

It has these top-level messages:
	DeployRequest
	DeployResponse
*/
package deployment

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeployRequest struct {
	UserId      string            `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	BotId       string            `protobuf:"bytes,2,opt,name=botId" json:"botId,omitempty"`
	Environment map[string]string `protobuf:"bytes,3,rep,name=environment" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *DeployRequest) Reset()                    { *m = DeployRequest{} }
func (m *DeployRequest) String() string            { return proto.CompactTextString(m) }
func (*DeployRequest) ProtoMessage()               {}
func (*DeployRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DeployRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeployRequest) GetBotId() string {
	if m != nil {
		return m.BotId
	}
	return ""
}

func (m *DeployRequest) GetEnvironment() map[string]string {
	if m != nil {
		return m.Environment
	}
	return nil
}

type DeployResponse struct {
	Code    int32  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeployResponse) Reset()                    { *m = DeployResponse{} }
func (m *DeployResponse) String() string            { return proto.CompactTextString(m) }
func (*DeployResponse) ProtoMessage()               {}
func (*DeployResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeployResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeployResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*DeployRequest)(nil), "deployment.DeployRequest")
	proto.RegisterType((*DeployResponse)(nil), "deployment.DeployResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Deployer service

type DeployerClient interface {
	Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (Deployer_DeployClient, error)
}

type deployerClient struct {
	cc *grpc.ClientConn
}

func NewDeployerClient(cc *grpc.ClientConn) DeployerClient {
	return &deployerClient{cc}
}

func (c *deployerClient) Deploy(ctx context.Context, in *DeployRequest, opts ...grpc.CallOption) (Deployer_DeployClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Deployer_serviceDesc.Streams[0], c.cc, "/deployment.Deployer/Deploy", opts...)
	if err != nil {
		return nil, err
	}
	x := &deployerDeployClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Deployer_DeployClient interface {
	Recv() (*DeployResponse, error)
	grpc.ClientStream
}

type deployerDeployClient struct {
	grpc.ClientStream
}

func (x *deployerDeployClient) Recv() (*DeployResponse, error) {
	m := new(DeployResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Deployer service

type DeployerServer interface {
	Deploy(*DeployRequest, Deployer_DeployServer) error
}

func RegisterDeployerServer(s *grpc.Server, srv DeployerServer) {
	s.RegisterService(&_Deployer_serviceDesc, srv)
}

func _Deployer_Deploy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeployRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DeployerServer).Deploy(m, &deployerDeployServer{stream})
}

type Deployer_DeployServer interface {
	Send(*DeployResponse) error
	grpc.ServerStream
}

type deployerDeployServer struct {
	grpc.ServerStream
}

func (x *deployerDeployServer) Send(m *DeployResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Deployer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "deployment.Deployer",
	HandlerType: (*DeployerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Deploy",
			Handler:       _Deployer_Deploy_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "contracts.proto",
}

func init() { proto.RegisterFile("contracts.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0xc7, 0x49, 0xd7, 0xae, 0x3a, 0x45, 0x2d, 0x83, 0xc8, 0xba, 0xa7, 0xd2, 0x53, 0xf1, 0x10,
	0xa4, 0x5e, 0xc4, 0x43, 0x41, 0xb0, 0x87, 0x82, 0x5e, 0xf2, 0x06, 0xdb, 0xcd, 0x20, 0x62, 0x9b,
	0x59, 0x93, 0x6c, 0x61, 0x9f, 0xd1, 0x97, 0x92, 0x4d, 0x1a, 0xaa, 0xa2, 0xb7, 0xf9, 0x25, 0xf3,
	0xff, 0x48, 0xe0, 0xa2, 0x66, 0xe3, 0x6d, 0x55, 0x7b, 0x27, 0x1b, 0xcb, 0x9e, 0x11, 0x34, 0x35,
	0x1b, 0xee, 0xb6, 0x64, 0xfc, 0xf4, 0x53, 0xc0, 0xd9, 0x53, 0x40, 0x45, 0x1f, 0x2d, 0x39, 0x8f,
	0x57, 0x90, 0xb7, 0x8e, 0xec, 0x4a, 0x17, 0x62, 0x22, 0x66, 0xa7, 0x6a, 0x4f, 0x78, 0x09, 0xc3,
	0x35, 0xfb, 0x95, 0x2e, 0x06, 0xe1, 0x38, 0x02, 0x3e, 0xc3, 0x88, 0xcc, 0xee, 0xcd, 0xb2, 0xe9,
	0xed, 0x8a, 0x6c, 0x92, 0xcd, 0x46, 0xf3, 0x1b, 0x79, 0x48, 0x90, 0x3f, 0xdc, 0xe5, 0xf2, 0xb0,
	0xbc, 0x34, 0xde, 0x76, 0xea, 0xbb, 0xbc, 0x5c, 0xc0, 0xf8, 0xf7, 0x02, 0x8e, 0x21, 0x7b, 0xa7,
	0x6e, 0x5f, 0xa6, 0x1f, 0xfb, 0x26, 0xbb, 0x6a, 0xd3, 0x52, 0x6a, 0x12, 0xe0, 0x61, 0x70, 0x2f,
	0xa6, 0x0b, 0x38, 0x4f, 0x71, 0xae, 0x61, 0xe3, 0x08, 0x11, 0x8e, 0x6a, 0xd6, 0x14, 0xe4, 0x43,
	0x15, 0x66, 0x2c, 0xe0, 0x78, 0x4b, 0xce, 0x55, 0xaf, 0xc9, 0x21, 0xe1, 0xfc, 0x05, 0x4e, 0xa2,
	0x9e, 0x2c, 0x3e, 0x42, 0x1e, 0x67, 0xbc, 0xfe, 0xf7, 0x39, 0x65, 0xf9, 0xd7, 0x55, 0x8c, 0xbe,
	0x15, 0xeb, 0x3c, 0xfc, 0xf7, 0xdd, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99, 0x5e, 0xfa, 0x7b,
	0x82, 0x01, 0x00, 0x00,
}
